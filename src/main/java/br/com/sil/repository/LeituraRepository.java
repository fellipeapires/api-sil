package br.com.sil.repository;

import java.time.LocalDate;
import java.util.List;

import javax.transaction.Transactional;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;

import br.com.sil.model.Leitura;
import br.com.sil.repository.leitura.LeituraRepositoryQuery;
import br.com.sil.repository.projection.LeituraProjection;
import br.com.sil.repository.projection.LeituraRepasseProjection;

public interface LeituraRepository extends JpaRepository<Leitura, Long>, LeituraRepositoryQuery {

	
	@Transactional
	@Query(value = "SELECT A.ID_LEITURA AS IDLEITURA, B.DT_ANO_MES_REF AS DATAREFERENCIA, C.CD_GRUPO_FATURAMENTO AS GRUPOFATURAMENTO, "
			+ "A.CD_TAREFA_LEITURA AS TAREFA, CONCAT(RTRIM(LTRIM(LEFT(A.NM_ENDERECO, 62))), ' ', RTRIM(LTRIM(SUBSTRING(A.NM_ENDERECO, 62, 10)))) AS ENDERECO, "
			+ "RTRIM(LTRIM(A.NM_COMPLEMENTO)) AS COMPLEMENTO, RTRIM(LTRIM(RIGHT(A.NM_ENDERECO, 10))) AS COMPLEMENTO2, A.NR_MEDIDOR AS MEDIDOR, A.NR_INSTALACAO AS INSTALACAO "
			+ "FROM MED_LEITURA AS A "
			+ "INNER JOIN MED_IMPORTACAO AS B ON B.ID_IMPORTACAO = A.ID_IMPORTACAO "
			+ "INNER JOIN MED_GRUPO_FATURAMENTO AS C ON C.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "LEFT OUTER JOIN MED_DISTRIBUICAO_LEITURA_REGISTRO AS D ON D.ID_LEITURA = A.ID_LEITURA AND D.DT_ANO_MES_REF = ?2 AND D.ID_REGIONAL = ?1 AND D.CD_GRUPO_FATURAMENTO = ?3 "
			+ "LEFT OUTER JOIN MED_RETORNO_LEITURA AS E ON E.ID_LEITURA = A.ID_LEITURA AND E.ID_REGIONAL = ?1 AND E.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "WHERE B.ID_REGIONAL = ?1 AND B.DT_ANO_MES_REF = ?2 AND C.CD_GRUPO_FATURAMENTO = ?3 AND A.CD_TAREFA_LEITURA = ?4 "
			+ "AND D.ID_LEITURA IS NULL AND E.ID_LEITURA IS NULL AND A.FL_LEITURA_REPASSE != 'R' "
			+ "ORDER BY CONCAT(RTRIM(LTRIM(LEFT(A.NM_ENDERECO, 62))), ' ', SUBSTRING(A.NM_ENDERECO,62,10)) ", nativeQuery = true)
	public List<LeituraProjection> getLeituraPendente(Long idRegional, LocalDate dataReferencia, int grupoFaturamento, String tarefa);
	
	@Transactional
	@Query(value = "SELECT B.DT_ANO_MES_REF AS DATAREFERENCIA, C.CD_GRUPO_FATURAMENTO AS GRUPOFATURAMENTO, A.CD_TAREFA_LEITURA AS TAREFA, COUNT(*) AS QTD "
			+ "FROM MED_LEITURA AS A "
			+ "INNER JOIN MED_IMPORTACAO AS B ON B.ID_IMPORTACAO = A.ID_IMPORTACAO "
			+ "INNER JOIN MED_GRUPO_FATURAMENTO AS C ON C.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "LEFT OUTER JOIN MED_DISTRIBUICAO_LEITURA_REGISTRO AS D ON D.ID_LEITURA = A.ID_LEITURA AND D.DT_ANO_MES_REF = ?2 AND D.ID_REGIONAL = ?1 AND D.CD_GRUPO_FATURAMENTO = ?3 "
			+ "LEFT OUTER JOIN MED_RETORNO_LEITURA AS E ON E.ID_LEITURA = A.ID_LEITURA AND E.ID_REGIONAL = ?1 AND E.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "WHERE B.ID_REGIONAL = ?1 AND B.DT_ANO_MES_REF = ?2 AND C.CD_GRUPO_FATURAMENTO = ?3 "
			+ "AND D.ID_LEITURA IS NULL AND E.ID_LEITURA IS NULL AND A.FL_LEITURA_REPASSE != 'R' "
			+ "GROUP BY B.DT_ANO_MES_REF, C.CD_GRUPO_FATURAMENTO, A.CD_TAREFA_LEITURA "
			+ "ORDER BY A.CD_TAREFA_LEITURA ", nativeQuery = true)
	public List<LeituraProjection> getTarefaPendente(Long idRegional, LocalDate dataReferencia, int grupoFaturamento);
	
	@Transactional
	@Query(value = "SELECT B.ID_REGIONAL AS IDREGIONAL, A2.ID_GRUPO_FATURAMENTO AS IDGRUPOFATURAMENTOPASSE, D2.ID_RETORNO_LEITURA AS IDRETORNOLEITURA, A2.ID_LEITURA AS IDLEITURAPASSE, A.ID_LEITURA AS IDLEITURAREPASSE, "
			+ "B.DT_ANO_MES_REF AS DATAREFERENCIA, A2.NR_ULTIMA_LEITURA AS ULTIMALEITURA, D2.NR_LEITURA_MEDIDA AS LEITURAMEDIDA, A.NR_MEDIA3_MESES AS MEDIATRESMESES, "
			+ "A.CD_RAMO_ATIVIDADE AS RAMOATIVIDADE, D2.ID_USUARIO AS IDUSUARIO, F.NM_NOME AS NOMEUSUARIO, A.NR_INSTALACAO AS INSTALACAO, "
			+ "A.NR_MEDIDOR AS MEDIDOR, D2.DT_LEITURA AS DATALEITURA, A.CD_TAREFA_LEITURA AS TAREFA, D2.DS_OBSERVACAO AS OBSERVACAO, "
			+ "A.CD_ORDENACAO_LEITURA AS ORDENACAOLEITURA, D2.CD_LATITUDE AS LATITUDE, D2.CD_LONGITUDE AS LONGITUDE, "
			+ "E.ID_OCORRENCIA AS IDOCORRENCIA, E.CD_OCORRENCIA AS CODOCORRENCIA, E.NM_NOME AS OCORRENCIA, A.NM_ENDERECO AS ENDERECO, A.NM_MUNICIPIO AS MUNICIPIO, "
			+ "A.NM_COMPLEMENTO AS COMPLEMENTO "
			+ "FROM MED_LEITURA AS A "
			+ "INNER JOIN MED_IMPORTACAO AS B ON B.ID_IMPORTACAO = A.ID_IMPORTACAO "
			+ "INNER JOIN MED_GRUPO_FATURAMENTO AS C ON C.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "INNER JOIN MED_LEITURA AS A2 ON A2.NR_MEDIDOR = A.NR_MEDIDOR AND A2.FL_LEITURA_REPASSE != 'R' "
			+ "INNER JOIN MED_RETORNO_LEITURA AS D2 ON D2.ID_LEITURA = A2.ID_LEITURA AND D2.DT_ANO_MES_REF = ?2 "
			+ "INNER JOIN MED_OCORRENCIA AS E ON E.ID_OCORRENCIA = D2.ID_OCORRENCIA "
			+ "INNER JOIN SEG_USUARIO F ON F.ID_USUARIO = D2.ID_USUARIO "
			+ "LEFT OUTER JOIN MED_RETORNO_LEITURA AS D ON D.ID_LEITURA = A.ID_LEITURA AND D.ID_REGIONAL = ?1 AND D.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "WHERE B.ID_REGIONAL = ?1 AND B.DT_ANO_MES_REF = ?2 AND C.CD_GRUPO_FATURAMENTO = ?3 "
			+ "AND A.NR_INSTALACAO LIKE (CASE WHEN ?4 = '0' THEN '%%' ELSE CONCAT('%', ?4) END) "
			+ "AND A.NR_MEDIDOR LIKE (CASE WHEN ?5 = '0' THEN '%%' ELSE CONCAT('%', ?5) END) "
			+ "AND A.FL_LEITURA_REPASSE = 'R' AND D2.FL_ATIVO = 1 AND D.ID_LEITURA IS NULL "
			+ "GROUP BY B.ID_REGIONAL, A2.ID_GRUPO_FATURAMENTO, D2.ID_RETORNO_LEITURA, A2.ID_LEITURA, A.ID_LEITURA, B.DT_ANO_MES_REF, A2.NR_ULTIMA_LEITURA, D2.NR_LEITURA_MEDIDA, A.NR_MEDIA3_MESES, "
			+ "A.CD_RAMO_ATIVIDADE, D2.ID_USUARIO, F.NM_NOME, A.NR_INSTALACAO, A.NR_MEDIDOR, D2.DT_LEITURA, A.CD_TAREFA_LEITURA, D2.DS_OBSERVACAO, "
			+ "A.CD_ORDENACAO_LEITURA, D2.CD_LATITUDE, D2.CD_LONGITUDE, E.ID_OCORRENCIA, E.CD_OCORRENCIA, E.NM_NOME, A.NM_ENDERECO, A.NM_MUNICIPIO, A.NM_COMPLEMENTO "
			+ "ORDER BY A.CD_TAREFA_LEITURA, A.NM_ENDERECO ASC", nativeQuery = true)
	public List<LeituraRepasseProjection> getLeituraRepasse(Long idRegional, LocalDate dataReferencia, int grupoFaturamento, String instalacao, String medidor);
	
	@Transactional
	@Query(value = "SELECT B.ID_REGIONAL AS IDREGIONAL, A2.ID_GRUPO_FATURAMENTO AS IDGRUPOFATURAMENTOPASSE, D2.ID_RETORNO_LEITURA AS IDRETORNOLEITURA, A2.ID_LEITURA AS IDLEITURAPASSE, A.ID_LEITURA AS IDLEITURAREPASSE, "
			+ "B.DT_ANO_MES_REF AS DATAREFERENCIA, A2.NR_ULTIMA_LEITURA AS ULTIMALEITURA, D2.NR_LEITURA_MEDIDA AS LEITURAMEDIDA, A.NR_MEDIA3_MESES AS MEDIATRESMESES, "
			+ "A.CD_RAMO_ATIVIDADE AS RAMOATIVIDADE, D2.ID_USUARIO AS IDUSUARIO, F.NM_NOME AS NOMEUSUARIO, A.NR_INSTALACAO AS INSTALACAO, "
			+ "A.NR_MEDIDOR AS MEDIDOR, D2.DT_LEITURA AS DATALEITURA, A.CD_TAREFA_LEITURA AS TAREFA, D2.DS_OBSERVACAO AS OBSERVACAO, "
			+ "A.CD_ORDENACAO_LEITURA AS ORDENACAOLEITURA, D2.CD_LATITUDE AS LATITUDE, D2.CD_LONGITUDE AS LONGITUDE, "
			+ "E.ID_OCORRENCIA AS IDOCORRENCIA, E.CD_OCORRENCIA AS CODOCORRENCIA, E.NM_NOME AS OCORRENCIA, A.NM_ENDERECO AS ENDERECO, A.NM_MUNICIPIO AS MUNICIPIO, "
			+ "A.NM_COMPLEMENTO AS COMPLEMENTO "
			+ "FROM MED_LEITURA AS A "
			+ "INNER JOIN MED_IMPORTACAO AS B ON B.ID_IMPORTACAO = A.ID_IMPORTACAO "
			+ "INNER JOIN MED_GRUPO_FATURAMENTO AS C ON C.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "INNER JOIN MED_LEITURA AS A2 ON A2.NR_MEDIDOR = A.NR_MEDIDOR AND A2.FL_LEITURA_REPASSE != 'R' "
			+ "INNER JOIN MED_RETORNO_LEITURA AS D2 ON D2.ID_LEITURA = A2.ID_LEITURA AND D2.DT_ANO_MES_REF = ?2 "
			+ "INNER JOIN MED_OCORRENCIA AS E ON E.ID_OCORRENCIA = D2.ID_OCORRENCIA "
			+ "INNER JOIN SEG_USUARIO F ON F.ID_USUARIO = D2.ID_USUARIO "
			+ "INNER JOIN RETORNO_FOTO AS G ON G.ID_LEITURA = A2.ID_LEITURA "
			+ "LEFT OUTER JOIN MED_RETORNO_LEITURA AS D ON D.ID_LEITURA = A.ID_LEITURA AND D.ID_REGIONAL = ?1 AND D.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "WHERE B.ID_REGIONAL = ?1 AND B.DT_ANO_MES_REF = ?2 AND C.CD_GRUPO_FATURAMENTO = ?3 "
			+ "AND A.NR_INSTALACAO LIKE (CASE WHEN ?4 = '0' THEN '%%' ELSE CONCAT('%', ?4) END) "
			+ "AND A.NR_MEDIDOR LIKE (CASE WHEN ?5 = '0' THEN '%%' ELSE CONCAT('%', ?5) END) "
			+ "AND A.FL_LEITURA_REPASSE = 'R' AND D2.FL_ATIVO = 1 AND D.ID_LEITURA IS NULL "
			+ "GROUP BY B.ID_REGIONAL, A2.ID_GRUPO_FATURAMENTO, D2.ID_RETORNO_LEITURA, A2.ID_LEITURA, A.ID_LEITURA, B.DT_ANO_MES_REF, A2.NR_ULTIMA_LEITURA, D2.NR_LEITURA_MEDIDA, A.NR_MEDIA3_MESES, "
			+ "A.CD_RAMO_ATIVIDADE, D2.ID_USUARIO, F.NM_NOME, A.NR_INSTALACAO, A.NR_MEDIDOR, D2.DT_LEITURA, A.CD_TAREFA_LEITURA, D2.DS_OBSERVACAO, "
			+ "A.CD_ORDENACAO_LEITURA, D2.CD_LATITUDE, D2.CD_LONGITUDE, E.ID_OCORRENCIA, E.CD_OCORRENCIA, E.NM_NOME, A.NM_ENDERECO, A.NM_MUNICIPIO, A.NM_COMPLEMENTO "
			+ "ORDER BY A.CD_TAREFA_LEITURA, A.NM_ENDERECO ASC", nativeQuery = true)
	public List<LeituraRepasseProjection> getLeituraRepasseComFoto(Long idRegional, LocalDate dataReferencia, int grupoFaturamento, String instalacao, String medidor);
	
	@Modifying
	@Transactional
	@Query(value = "UPDATE MED_LEITURA SET CD_TAREFA_LEITURA = ?5, CD_TAREFA_ENTREGA = ?6 "
			+ "WHERE ID_LEITURA = ?4 AND ID_LEITURA NOT IN (SELECT ID_LEITURA FROM MED_DISTRIBUICAO_LEITURA_REGISTRO WHERE ID_REGIONAL = ?1 AND DT_ANO_MES_REF = ?2 AND CD_GRUPO_FATURAMENTO = ?3 AND ID_LEITURA = ?4) SELECT @@ROWCOUNT", nativeQuery = true)
	public int alterarTarefa(Long idRegional, LocalDate dataReferencia, int grupoFaturamento, Long idLeitura, String tarefaLeitura, String tarefaEntrega);
	
	/*
	 @Modifying
	@Transactional
	@Query(value="UPDATE MED_DISTRIBUICAO_LEITURA_REGISTRO SET FL_ASSOCIADO = ?6 "
			+ "FROM MED_LEITURA AS A "
			+ "INNER JOIN MED_IMPORTACAO AS B ON A.ID_IMPORTACAO = B.ID_IMPORTACAO "
			+ "INNER JOIN MED_GRUPO_FATURAMENTO AS D ON D.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "INNER JOIN MED_DISTRIBUICAO_LEITURA_REGISTRO AS C ON C.ID_LEITURA = A.ID_LEITURA "
			+ "INNER JOIN SEG_USUARIO AS E ON E.ID_USUARIO = C.ID_USUARIO "
			+ "WHERE B.DT_ANO_MES_REF = ?1 AND B.ID_REGIONAL = ?2 AND D.CD_GRUPO_FATURAMENTO = ?3  AND C.FL_ASSOCIADO = ?7 "
			+ "AND A.CD_TAREFA_LEITURA = ISNULL((CASE WHEN ?4 = '0' THEN NULL ELSE ?4 END), A.CD_TAREFA_LEITURA) "
			+ "AND C.ID_USUARIO = ISNULL((CASE WHEN ?5 = 0 THEN NULL ELSE ?5 END), C.ID_USUARIO)", nativeQuery = true)
	public Integer liberarCarga(LocalDate dataReferencia, long idRegional, int grupoFaturamento, String tarefa, long idUsuario, int liberado, int naoLiberado);
	 * */
	
	@Transactional
	@Query(value = "SELECT A.* "
			+ "FROM MED_LEITURA AS A "
			+ "	INNER JOIN MED_IMPORTACAO AS B ON B.ID_IMPORTACAO  = A.ID_IMPORTACAO "
			+ "	INNER JOIN MED_GRUPO_FATURAMENTO AS C ON C.ID_GRUPO_FATURAMENTO = B.ID_GRUPO_FATURAMENTO "
			+ "	LEFT OUTER JOIN MED_DISTRIBUICAO_LEITURA_REGISTRO AS D ON D.ID_LEITURA = A.ID_LEITURA AND D.ID_REGIONAL = ?1 AND D.DT_ANO_MES_REF = ?2 AND D.CD_GRUPO_FATURAMENTO = ?3 "
			+ "	LEFT OUTER JOIN MED_RETORNO_LEITURA AS E ON E.ID_LEITURA = A.ID_LEITURA AND E.ID_REGIONAL = ?1 AND E.FL_ATIVO = 1 "
			+ "WHERE "
			+ "	B.ID_REGIONAL = ?1 "
			+ "	AND B.DT_ANO_MES_REF = ?2 "
			+ "	AND C.CD_GRUPO_FATURAMENTO = ?3 "
			+ "	AND A.CD_TAREFA_LEITURA = ?4 "
			+ "	AND D.ID_LEITURA IS NULL "
			+ "	AND E.ID_LEITURA IS NULL", nativeQuery = true)
	public List<Leitura> listarLancamento(Long idRegional, LocalDate dataReferencia, int grupoFaturamento, String tarefaLeitura);
	
	// ALTERACAO DE TAREFA PO ENDERECO
	/*
	 UPDATE MED_LEITURA SET CD_TAREFA_LEITURA = '4809', CD_TAREFA_ENTREGA = '4809' WHERE ID_LEITURA IN(
SELECT B.ID_LEITURA
FROM MED_IMPORTACAO A 
INNER JOIN MED_LEITURA B ON A.ID_IMPORTACAO=B.ID_IMPORTACAO
LEFT OUTER JOIN MED_DISTRIBUICAO_LEITURA_REGISTRO AS C ON C.ID_LEITURA = B.ID_LEITURA 
WHERE A.ID_REGIONAL = 1 AND A.DT_ANO_MES_REF='2023-08-01' AND A.ID_GRUPO_FATURAMENTO in(1) --AND B.CD_TAREFA_LEITURA='4235'
AND LTRIM(RTRIM(LEFT(B.NM_ENDERECO,62))) = 'R JOSE MANOEL LOPES' AND LTRIM(RTRIM(SUBSTRING(B.NM_ENDERECO,62,10))) = '230' AND C.ID_LEITURA IS NULL
GROUP BY B.ID_LEITURA) 
	 * */
	
	
}
